package games;import java.util.Scanner;public class TicTacToe {    private final int maxRows = 3;    private final int maxColumns = 3;    private int inputCount = 0;    private final Scanner scanner = new Scanner(System.in);    private String[][] board = new String[maxRows][maxColumns];    private TicTacPlayer[] playerArray = new TicTacPlayer[2];    private void emptyLine() {        System.out.println();    }    private void dash32() {        for (int i = 0; i < 32; i++) {            System.out.print("-");        }    }    private void printStr(String stringValue) {        System.out.println(stringValue);    }    private void setEmptyBoard() {        for (int rowIndex = 0; rowIndex < board.length; rowIndex++) {            for (int columnIndex = 0; columnIndex < board[rowIndex].length; columnIndex++) {                board[rowIndex][columnIndex] = "_";            }        }        emptyLine();        dash32();    }    private void setUserInfo() {        for (int userIndex = 0; userIndex < playerArray.length; userIndex++) {            TicTacPlayer tictacplayer = new TicTacPlayer();            int displayUserIndex = userIndex + 1;            emptyLine();            dash32();            printStr("Please enter name PLAYER( " + displayUserIndex + "): ");            tictacplayer.setName(scanner.next());            printStr("Please enter your symbol PLAYER( " + displayUserIndex + "): ");            tictacplayer.setSymbol(scanner.next());            emptyLine();            dash32();        }    }    private void calculatePosition(int numPosition, String symbol) {        switch (numPosition) {            case 1 -> board[0][0] = symbol;            case 2 -> board[0][1] = symbol;            case 3 -> board[0][2] = symbol;            case 4 -> board[1][0] = symbol;            case 5 -> board[1][1] = symbol;            case 6 -> board[1][2] = symbol;            case 7 -> board[2][0] = symbol;            case 8 -> board[2][1] = symbol;            case 9 -> board[2][2] = symbol;            default -> printStr("Please select a valid positional case: ");        }    }//    private String checkRows() {//        String finalResult = "";//        String var1 = "";//        String var2 = "";//        String var3 = "";//        for (int rowIndex = 0; rowIndex < board.length; rowIndex++) {//            var1 = board[rowIndex][0];//            }//            System.out.println("vars are: " + var1 + var2 + var3);//            if (var1 == var2 && var1 == var3) {////                runLoop = false;//                finalResult = "Won";//            }//        }//        return finalResult;//    }    private String checkWinOrLoss() {        String finalResult = "";        String var1 = "";        String var2 = "";        String var3 = "";        boolean runLoop = true;        while (runLoop == true) {//            for rows            for (int rowIndex = 0; rowIndex < board.length; rowIndex++) {                for (int colIndex = 0; colIndex < board[rowIndex].length; colIndex++) {                    switch (colIndex) {                        case 0 -> var1 = board[rowIndex][0];                        case 1 -> var1 = board[rowIndex][1];                        case 2 -> var1 = board[rowIndex][2];                    }                }                if (var1 == var2 && var1 == var3) {                    runLoop = false;                    finalResult = "Won";                }            }//            for cols            for (int rowIndex = 0; rowIndex < board.length; rowIndex++) {                for (int colIndex = 0; colIndex < board[rowIndex].length; colIndex++) {                    switch (colIndex) {                        case 0 -> var1 = board[colIndex][rowIndex];                        case 1 -> var1 = board[colIndex][rowIndex];                        case 2 -> var1 = board[colIndex][rowIndex];                    }                }                System.out.println("vars are: " + var1 + var2 + var3);                if (var1 == var2 && var1 == var3) {                    runLoop = false;                    finalResult = "Won";                }            }        }        return finalResult;    }    private void playBoard() {        while (inputCount < 10) {            for (int userIndex = 0; userIndex < playerArray.length; userIndex++) {                emptyLine();                if (userIndex == 0) {                    printStr("PLAYER 1 ");                    printStr("Please enter your value in terms of 9 boxes: ");                    int user1Input = scanner.nextInt();                    calculatePosition(user1Input, "X");//                    System.out.println(checkRows());//                    if (checkRows() == "Won") {//                        break;//                    }                    inputCount++;                } else {                    printStr("PLAYER 2 ");                    printStr("Please enter your value in terms of 9 boxes: ");                    int user2Input = scanner.nextInt();                    calculatePosition(user2Input, "O");//                    System.out.println(checkRows());//                    if (checkRows() == "Won") {//                        break;//                    }                    inputCount++;                }            }            for (int rowIndex = 0; rowIndex < board.length; rowIndex++) {                for (int colIndex = 0; colIndex < board[rowIndex].length; colIndex++) {                    System.out.print(board[rowIndex][colIndex] + " ");//                    System.out.println();                }                System.out.println();            }        }    }    public void run() {        setEmptyBoard();        setUserInfo();        playBoard();    }}